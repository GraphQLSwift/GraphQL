name: Tests

on:
  push:
    branches: [ main ]
    paths-ignore: [ README.md ]
  pull_request:
    branches: [ main ]
    paths-ignore: [ README.md ]
  workflow_dispatch:

jobs:
  formatlint:
    name: Format linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Pull formatting docker image
        run: docker pull ghcr.io/nicklockwood/swiftformat:latest
      - name: Run format linting
        run: docker run --rm -v ${{ github.workspace }}:/repo ghcr.io/nicklockwood/swiftformat:latest /repo --lint

  macos:
    name: Test on macOS
    runs-on: macos-latest
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - uses: actions/checkout@v3
    - name: Build and test
      run: swift test --parallel --enable-test-discovery

  linux:
    name: Test on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: swift-actions/setup-swift@v2
    - uses: actions/checkout@v3
    - name: Test
      run: swift test --parallel --enable-code-coverage
    - name: Get test coverage html
      run: |
        llvm-cov show \
          $(swift build --show-bin-path)/GraphQLPackageTests.xctest \
          --instr-profile $(swift build --show-bin-path)/codecov/default.profdata \
          --ignore-filename-regex="\.build|Tests" \
          --format html \
          --output-dir=.test-coverage
    - name: Upload test coverage html
      uses: actions/upload-artifact@v3
      with:
        name: test-coverage-report
        path: .test-coverage

  backcompat-ubuntu-22_04:
    name: Test Swift ${{ matrix.swift }} on Ubuntu 22.04
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        swift: ["5.8", "5.9", "5.10"]
    steps:
    - uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift }}
    - uses: actions/checkout@v3
    - name: Test
      run: swift test --parallel

